services:
    ws-new:
        image: kooldev/php:8.3
        container_name: ws-new
        working_dir: /ws-new
        restart: always
        networks:
            - internal
            - nginx_network
        volumes:
            - ".:/ws-new"
            - "./docker/php/php-ini-overrides.ini:/etc/php/8.3/fpm/conf.d/99-overrides.ini"
        links:
            - ws-new-database
        depends_on:
            - ws-new-database
        environment:
            - PHP_EXECUTABLE_PATH=/usr/local/bin/php
    ws-new-nginx:
        image: nginx:alpine
        container_name: ws-new-nginx
        restart: always
        working_dir: /ws-new
        networks:
            - internal
            - nginx_network
        ports:
            - "9007:80"
        volumes:
            - .:/ws-new
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - ws-new
    ws-new-composer:
        image: composer:latest
        container_name: ws-new-composer
        working_dir: /ws-new
        command: update --ignore-platform-reqs
        volumes:
            - .:/ws-new
        restart: on-failure
        depends_on:
            - ws-new
    ws-new-database:
        image: mariadb:latest
        restart: always
        container_name: ws-new-database
        working_dir: /ws-new
        networks:
            - internal
            - nginx_network
        # command: mysqld --skip-grant-tables
        environment:
            - MYSQL_ROOT_PASSWORD=password
            - MYSQL_DATABASE=ws-new
            - MYSQL_USER=root
            - MYSQL_PASSWORD=password
        volumes:
            # - ./waio.sql:/docker-entrypoint-initdb.d/waio.sql
            - .:/ws-new
            - ./ws-new-database:/var/lib/mysql
        ports:
            - "8006:3306"
        command: --max_allowed_packet=256M # Add this line
    ws-new-redis:
        image: "redis:alpine"
        ports:
            - "${FORWARD_REDIS_PORT:-6383}:6383"
        volumes:
            - ws-new-redis:/data
        networks:
            - internal
            - nginx_network
        command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81

    app:
        image: node:16-alpine
        working_dir: /app
        volumes:
            - .:/app
        command: sh -c "npm install && npm run build"
    ws-new-npm:
        image: node:20-alpine
        container_name: ws-new-npm
        working_dir: /ws-new
        volumes:
            - ".:/ws-new"
        depends_on:
            - ws-new
    adminer:
        image: adminer
        restart: always
        ports:
            - "9003:8080"
        networks:
            - internal
            - nginx_network
        depends_on:
            - ws-new-database
        container_name: ws-new-adminer
networks:
    nginx_network:
        external: true
    internal:
        driver: overlay
        name: "global"
        attachable: true
        external: true
volumes:
    ws-new-database:
        driver: local
    ws-new-redis:
        driver: local
